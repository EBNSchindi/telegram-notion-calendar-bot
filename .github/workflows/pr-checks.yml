name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check-size:
    name: Check PR Size
    runs-on: ubuntu-latest
    
    steps:
    - name: Check PR size
      uses: actions/github-script@v7
      with:
        script: |
          const pr = context.payload.pull_request;
          const additions = pr.additions;
          const deletions = pr.deletions;
          const total = additions + deletions;
          
          let label = 'size/XS';
          if (total > 1000) label = 'size/XXL';
          else if (total > 500) label = 'size/XL';
          else if (total > 250) label = 'size/L';
          else if (total > 100) label = 'size/M';
          else if (total > 50) label = 'size/S';
          
          await github.rest.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: pr.number,
            labels: [label]
          });
          
          if (total > 500) {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: '⚠️ This PR contains ' + total + ' changes. Consider breaking it into smaller PRs for easier review.'
            });
          }

  check-files:
    name: Check Modified Files
    runs-on: ubuntu-latest
    
    steps:
    - name: Check for config changes
      uses: actions/github-script@v7
      with:
        script: |
          const pr = context.payload.pull_request;
          const { data: files } = await github.rest.pulls.listFiles({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: pr.number
          });
          
          const sensitiveFiles = files.filter(f => 
            f.filename.includes('.env') ||
            f.filename.includes('config/') ||
            f.filename.includes('requirements.txt')
          );
          
          if (sensitiveFiles.length > 0) {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              labels: ['needs-careful-review']
            });
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: '🔍 This PR modifies sensitive files:\n' + 
                    sensitiveFiles.map(f => `- ${f.filename}`).join('\n') +
                    '\n\nPlease review these changes carefully.'
            });
          }

  auto-assign:
    name: Auto Assign Reviewers
    runs-on: ubuntu-latest
    
    steps:
    - name: Auto assign reviewers based on files
      uses: actions/github-script@v7
      with:
        script: |
          const pr = context.payload.pull_request;
          const { data: files } = await github.rest.pulls.listFiles({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: pr.number
          });
          
          const reviewers = new Set();
          
          // Add reviewers based on modified files
          for (const file of files) {
            if (file.filename.includes('tests/')) {
              reviewers.add('test-reviewer');
            }
            if (file.filename.includes('src/services/ai')) {
              reviewers.add('ai-reviewer');
            }
            if (file.filename.includes('src/handlers/')) {
              reviewers.add('handler-reviewer');
            }
          }
          
          // Remove PR author from reviewers
          reviewers.delete(pr.user.login);
          
          if (reviewers.size > 0) {
            try {
              await github.rest.pulls.requestReviewers({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                reviewers: Array.from(reviewers).filter(r => r !== pr.user.login)
              });
            } catch (error) {
              console.log('Could not assign reviewers:', error.message);
            }
          }